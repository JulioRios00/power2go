{
  "/home/julioaraujo00/projects/power_to_go/power2go/power2go": {
    "versionSfCore": null,
    "versionFramework": "4.4.7",
    "isWithinCompose": false,
    "isCompose": false,
    "composeOrgName": null,
    "composeResolverProviders": {
      "opt": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "org": "bravodev",
            "app": "power2go",
            "service": "django-graphQL-api",
            "useDotenv": true,
            "provider": {
              "name": "aws",
              "region": "us-east-1",
              "runtime": "python3.9",
              "stage": "stg",
              "timeout": 30,
              "memorySize": 2048,
              "deploymentBucket": "bravosuperbucket",
              "versionFunctions": true,
              "environment": {
                "AWS_REGION_NAME": "us-east-1"
              },
              "deploymentBucketObject": {
                "name": "bravosuperbucket"
              },
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ApiLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/django-graphQL-api-stg-api"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "django-graphQL-api",
                                "stg",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/django-graphQL-api-stg*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/django-graphQL-api-stg*:*:*"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "django-graphQL-api",
                            "stg",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "ApiLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "bravosuperbucket",
                        "S3Key": "serverless/django-graphQL-api/stg/1730760253748-2024-11-04T22:44:13.748Z/django-graphQL-api.zip"
                      },
                      "Handler": "wsgi_handler.handler",
                      "Runtime": "python3.9",
                      "FunctionName": "django-graphQL-api-stg-api",
                      "MemorySize": 2048,
                      "Timeout": 30,
                      "Environment": {
                        "Variables": {
                          "AWS_REGION_NAME": "us-east-1"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "ApiLogGroup"
                    ]
                  },
                  "ApiLambdaVersionQKlrF8NWIJuDpYS05be16OrYwBrpMLsqV53BonTFaM": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "ApiLambdaFunction"
                      },
                      "CodeSha256": "ifSgcrHJqeBvm6W1nCyqZV/AD0oGXIVVs5+wXgjRp4w="
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "stg-django-graphQL-api",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourceProxyVar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "{proxy+}",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodAny": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "ANY",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ApiLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ApiLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodProxyVarAny": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "ANY",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceProxyVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ApiLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ApiLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayDeployment1730760251566": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "stg"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodAny",
                      "ApiGatewayMethodProxyVarAny"
                    ]
                  },
                  "ApiLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "ApiLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "bravosuperbucket",
                    "Export": {
                      "Name": "sls-django-graphQL-api-stg-ServerlessDeploymentBucketName"
                    }
                  },
                  "ApiLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "ApiLambdaVersionQKlrF8NWIJuDpYS05be16OrYwBrpMLsqV53BonTFaM"
                    },
                    "Export": {
                      "Name": "sls-django-graphQL-api-stg-ApiLambdaFunctionQualifiedArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/stg"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-django-graphQL-api-stg-ServiceEndpoint"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "plugins": [
              "serverless-wsgi",
              "serverless-python-requirements",
              "serverless-dotenv-plugin"
            ],
            "functions": {
              "api": {
                "handler": "wsgi_handler.handler",
                "events": [
                  {
                    "http": "ANY /"
                  },
                  {
                    "http": "ANY /{proxy+}"
                  }
                ],
                "name": "django-graphQL-api-stg-api",
                "package": {},
                "memory": 2048,
                "timeout": 30,
                "runtime": "python3.9",
                "vpc": {},
                "versionLogicalId": "ApiLambdaVersionQKlrF8NWIJuDpYS05be16OrYwBrpMLsqV53BonTFaM"
              }
            },
            "custom": {
              "wsgi": {
                "app": "myapi.wsgi.application"
              }
            },
            "package": {
              "exclude": [
                "venv/**",
                "__pycache__/*",
                "node_modules/**",
                "README.md",
                "pytest.ini",
                "conftest.py",
                ".venv",
                ".venv.example",
                "package.json",
                "package-lock.json"
              ],
              "artifactsS3KeyDirname": "serverless/django-graphQL-api/stg/code-artifacts",
              "deploymentBucket": "bravosuperbucket",
              "patterns": [
                "wsgi_handler.py",
                "serverless_wsgi.py",
                ".serverless-wsgi"
              ],
              "artifact": "/home/julioaraujo00/projects/power_to_go/power2go/power2go/.serverless/django-graphQL-api.zip",
              "artifactDirectoryName": "serverless/django-graphQL-api/stg/1730760253748-2024-11-04T22:44:13.748Z"
            }
          },
          "configFileDirPath": "/home/julioaraujo00/projects/power_to_go/power2go/power2go",
          "config": {
            "type": "opt"
          },
          "options": {},
          "logger": {
            "namespace": "s:core:resolver:opt",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      },
      "env": {
        "instance": {
          "credentials": "<REDACTED>",
          "serviceConfigFile": {
            "org": "bravodev",
            "app": "power2go",
            "service": "django-graphQL-api",
            "useDotenv": true,
            "provider": {
              "name": "aws",
              "region": "us-east-1",
              "runtime": "python3.9",
              "stage": "stg",
              "timeout": 30,
              "memorySize": 2048,
              "deploymentBucket": "bravosuperbucket",
              "versionFunctions": true,
              "environment": {
                "AWS_REGION_NAME": "us-east-1"
              },
              "deploymentBucketObject": {
                "name": "bravosuperbucket"
              },
              "compiledCloudFormationTemplate": {
                "AWSTemplateFormatVersion": "2010-09-09",
                "Description": "The AWS CloudFormation template for this Serverless application",
                "Resources": {
                  "ApiLogGroup": {
                    "Type": "AWS::Logs::LogGroup",
                    "Properties": {
                      "LogGroupName": "/aws/lambda/django-graphQL-api-stg-api"
                    }
                  },
                  "IamRoleLambdaExecution": {
                    "Type": "AWS::IAM::Role",
                    "Properties": {
                      "AssumeRolePolicyDocument": {
                        "Version": "2012-10-17",
                        "Statement": [
                          {
                            "Effect": "Allow",
                            "Principal": {
                              "Service": [
                                "lambda.amazonaws.com"
                              ]
                            },
                            "Action": [
                              "sts:AssumeRole"
                            ]
                          }
                        ]
                      },
                      "Policies": [
                        {
                          "PolicyName": {
                            "Fn::Join": [
                              "-",
                              [
                                "django-graphQL-api",
                                "stg",
                                "lambda"
                              ]
                            ]
                          },
                          "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:CreateLogStream",
                                  "logs:CreateLogGroup",
                                  "logs:TagResource"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/django-graphQL-api-stg*:*"
                                  }
                                ]
                              },
                              {
                                "Effect": "Allow",
                                "Action": [
                                  "logs:PutLogEvents"
                                ],
                                "Resource": [
                                  {
                                    "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/django-graphQL-api-stg*:*:*"
                                  }
                                ]
                              }
                            ]
                          }
                        }
                      ],
                      "Path": "/",
                      "RoleName": {
                        "Fn::Join": [
                          "-",
                          [
                            "django-graphQL-api",
                            "stg",
                            {
                              "Ref": "AWS::Region"
                            },
                            "lambdaRole"
                          ]
                        ]
                      }
                    }
                  },
                  "ApiLambdaFunction": {
                    "Type": "AWS::Lambda::Function",
                    "Properties": {
                      "Code": {
                        "S3Bucket": "bravosuperbucket",
                        "S3Key": "serverless/django-graphQL-api/stg/1730760253748-2024-11-04T22:44:13.748Z/django-graphQL-api.zip"
                      },
                      "Handler": "wsgi_handler.handler",
                      "Runtime": "python3.9",
                      "FunctionName": "django-graphQL-api-stg-api",
                      "MemorySize": 2048,
                      "Timeout": 30,
                      "Environment": {
                        "Variables": {
                          "AWS_REGION_NAME": "us-east-1"
                        }
                      },
                      "Role": {
                        "Fn::GetAtt": [
                          "IamRoleLambdaExecution",
                          "Arn"
                        ]
                      }
                    },
                    "DependsOn": [
                      "ApiLogGroup"
                    ]
                  },
                  "ApiLambdaVersionQKlrF8NWIJuDpYS05be16OrYwBrpMLsqV53BonTFaM": {
                    "Type": "AWS::Lambda::Version",
                    "DeletionPolicy": "Retain",
                    "Properties": {
                      "FunctionName": {
                        "Ref": "ApiLambdaFunction"
                      },
                      "CodeSha256": "ifSgcrHJqeBvm6W1nCyqZV/AD0oGXIVVs5+wXgjRp4w="
                    }
                  },
                  "ApiGatewayRestApi": {
                    "Type": "AWS::ApiGateway::RestApi",
                    "Properties": {
                      "Name": "stg-django-graphQL-api",
                      "EndpointConfiguration": {
                        "Types": [
                          "EDGE"
                        ]
                      },
                      "Policy": ""
                    }
                  },
                  "ApiGatewayResourceProxyVar": {
                    "Type": "AWS::ApiGateway::Resource",
                    "Properties": {
                      "ParentId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "PathPart": "{proxy+}",
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      }
                    }
                  },
                  "ApiGatewayMethodAny": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "ANY",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Fn::GetAtt": [
                          "ApiGatewayRestApi",
                          "RootResourceId"
                        ]
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ApiLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ApiLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayMethodProxyVarAny": {
                    "Type": "AWS::ApiGateway::Method",
                    "Properties": {
                      "HttpMethod": "ANY",
                      "RequestParameters": {},
                      "ResourceId": {
                        "Ref": "ApiGatewayResourceProxyVar"
                      },
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "ApiKeyRequired": "<REDACTED>",
                      "AuthorizationType": "NONE",
                      "Integration": {
                        "IntegrationHttpMethod": "POST",
                        "Type": "AWS_PROXY",
                        "Uri": {
                          "Fn::Join": [
                            "",
                            [
                              "arn:",
                              {
                                "Ref": "AWS::Partition"
                              },
                              ":apigateway:",
                              {
                                "Ref": "AWS::Region"
                              },
                              ":lambda:path/2015-03-31/functions/",
                              {
                                "Fn::GetAtt": [
                                  "ApiLambdaFunction",
                                  "Arn"
                                ]
                              },
                              "/invocations"
                            ]
                          ]
                        }
                      },
                      "MethodResponses": []
                    },
                    "DependsOn": [
                      "ApiLambdaPermissionApiGateway"
                    ]
                  },
                  "ApiGatewayDeployment1730760251566": {
                    "Type": "AWS::ApiGateway::Deployment",
                    "Properties": {
                      "RestApiId": {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "StageName": "stg"
                    },
                    "DependsOn": [
                      "ApiGatewayMethodAny",
                      "ApiGatewayMethodProxyVarAny"
                    ]
                  },
                  "ApiLambdaPermissionApiGateway": {
                    "Type": "AWS::Lambda::Permission",
                    "Properties": {
                      "FunctionName": {
                        "Fn::GetAtt": [
                          "ApiLambdaFunction",
                          "Arn"
                        ]
                      },
                      "Action": "lambda:InvokeFunction",
                      "Principal": "apigateway.amazonaws.com",
                      "SourceArn": {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":execute-api:",
                            {
                              "Ref": "AWS::Region"
                            },
                            ":",
                            {
                              "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                              "Ref": "ApiGatewayRestApi"
                            },
                            "/*/*"
                          ]
                        ]
                      }
                    }
                  }
                },
                "Outputs": {
                  "ServerlessDeploymentBucketName": {
                    "Value": "bravosuperbucket",
                    "Export": {
                      "Name": "sls-django-graphQL-api-stg-ServerlessDeploymentBucketName"
                    }
                  },
                  "ApiLambdaFunctionQualifiedArn": {
                    "Description": "Current Lambda function version",
                    "Value": {
                      "Ref": "ApiLambdaVersionQKlrF8NWIJuDpYS05be16OrYwBrpMLsqV53BonTFaM"
                    },
                    "Export": {
                      "Name": "sls-django-graphQL-api-stg-ApiLambdaFunctionQualifiedArn"
                    }
                  },
                  "ServiceEndpoint": {
                    "Description": "URL of the service endpoint",
                    "Value": {
                      "Fn::Join": [
                        "",
                        [
                          "https://",
                          {
                            "Ref": "ApiGatewayRestApi"
                          },
                          ".execute-api.",
                          {
                            "Ref": "AWS::Region"
                          },
                          ".",
                          {
                            "Ref": "AWS::URLSuffix"
                          },
                          "/stg"
                        ]
                      ]
                    },
                    "Export": {
                      "Name": "sls-django-graphQL-api-stg-ServiceEndpoint"
                    }
                  }
                }
              },
              "vpc": {}
            },
            "plugins": [
              "serverless-wsgi",
              "serverless-python-requirements",
              "serverless-dotenv-plugin"
            ],
            "functions": {
              "api": {
                "handler": "wsgi_handler.handler",
                "events": [
                  {
                    "http": "ANY /"
                  },
                  {
                    "http": "ANY /{proxy+}"
                  }
                ],
                "name": "django-graphQL-api-stg-api",
                "package": {},
                "memory": 2048,
                "timeout": 30,
                "runtime": "python3.9",
                "vpc": {},
                "versionLogicalId": "ApiLambdaVersionQKlrF8NWIJuDpYS05be16OrYwBrpMLsqV53BonTFaM"
              }
            },
            "custom": {
              "wsgi": {
                "app": "myapi.wsgi.application"
              }
            },
            "package": {
              "exclude": [
                "venv/**",
                "__pycache__/*",
                "node_modules/**",
                "README.md",
                "pytest.ini",
                "conftest.py",
                ".venv",
                ".venv.example",
                "package.json",
                "package-lock.json"
              ],
              "artifactsS3KeyDirname": "serverless/django-graphQL-api/stg/code-artifacts",
              "deploymentBucket": "bravosuperbucket",
              "patterns": [
                "wsgi_handler.py",
                "serverless_wsgi.py",
                ".serverless-wsgi"
              ],
              "artifact": "/home/julioaraujo00/projects/power_to_go/power2go/power2go/.serverless/django-graphQL-api.zip",
              "artifactDirectoryName": "serverless/django-graphQL-api/stg/1730760253748-2024-11-04T22:44:13.748Z"
            }
          },
          "configFileDirPath": "/home/julioaraujo00/projects/power_to_go/power2go/power2go",
          "config": {
            "type": "env"
          },
          "options": {},
          "stage": "stg",
          "logger": {
            "namespace": "s:core:resolver:env",
            "prefix": null,
            "prefixColor": null
          },
          "_credentialsPromise": "<REDACTED>"
        },
        "resolvers": {}
      },
      "default-aws-credential-resolver": "<REDACTED>"
    },
    "composeServiceName": null,
    "servicePath": "/home/julioaraujo00/projects/power_to_go/power2go/power2go",
    "serviceConfigFileName": "serverless.yml",
    "service": {
      "org": "bravodev",
      "app": "power2go",
      "service": "django-graphQL-api",
      "useDotenv": true,
      "provider": {
        "name": "aws",
        "region": "us-east-1",
        "runtime": "python3.9",
        "stage": "stg",
        "timeout": 30,
        "memorySize": 2048,
        "deploymentBucket": "bravosuperbucket",
        "versionFunctions": true,
        "environment": {
          "AWS_REGION_NAME": "us-east-1"
        },
        "deploymentBucketObject": {
          "name": "bravosuperbucket"
        },
        "compiledCloudFormationTemplate": {
          "AWSTemplateFormatVersion": "2010-09-09",
          "Description": "The AWS CloudFormation template for this Serverless application",
          "Resources": {
            "ApiLogGroup": {
              "Type": "AWS::Logs::LogGroup",
              "Properties": {
                "LogGroupName": "/aws/lambda/django-graphQL-api-stg-api"
              }
            },
            "IamRoleLambdaExecution": {
              "Type": "AWS::IAM::Role",
              "Properties": {
                "AssumeRolePolicyDocument": {
                  "Version": "2012-10-17",
                  "Statement": [
                    {
                      "Effect": "Allow",
                      "Principal": {
                        "Service": [
                          "lambda.amazonaws.com"
                        ]
                      },
                      "Action": [
                        "sts:AssumeRole"
                      ]
                    }
                  ]
                },
                "Policies": [
                  {
                    "PolicyName": {
                      "Fn::Join": [
                        "-",
                        [
                          "django-graphQL-api",
                          "stg",
                          "lambda"
                        ]
                      ]
                    },
                    "PolicyDocument": {
                      "Version": "2012-10-17",
                      "Statement": [
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:CreateLogStream",
                            "logs:CreateLogGroup",
                            "logs:TagResource"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/django-graphQL-api-stg*:*"
                            }
                          ]
                        },
                        {
                          "Effect": "Allow",
                          "Action": [
                            "logs:PutLogEvents"
                          ],
                          "Resource": [
                            {
                              "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/django-graphQL-api-stg*:*:*"
                            }
                          ]
                        }
                      ]
                    }
                  }
                ],
                "Path": "/",
                "RoleName": {
                  "Fn::Join": [
                    "-",
                    [
                      "django-graphQL-api",
                      "stg",
                      {
                        "Ref": "AWS::Region"
                      },
                      "lambdaRole"
                    ]
                  ]
                }
              }
            },
            "ApiLambdaFunction": {
              "Type": "AWS::Lambda::Function",
              "Properties": {
                "Code": {
                  "S3Bucket": "bravosuperbucket",
                  "S3Key": "serverless/django-graphQL-api/stg/1730760253748-2024-11-04T22:44:13.748Z/django-graphQL-api.zip"
                },
                "Handler": "wsgi_handler.handler",
                "Runtime": "python3.9",
                "FunctionName": "django-graphQL-api-stg-api",
                "MemorySize": 2048,
                "Timeout": 30,
                "Environment": {
                  "Variables": {
                    "AWS_REGION_NAME": "us-east-1"
                  }
                },
                "Role": {
                  "Fn::GetAtt": [
                    "IamRoleLambdaExecution",
                    "Arn"
                  ]
                }
              },
              "DependsOn": [
                "ApiLogGroup"
              ]
            },
            "ApiLambdaVersionQKlrF8NWIJuDpYS05be16OrYwBrpMLsqV53BonTFaM": {
              "Type": "AWS::Lambda::Version",
              "DeletionPolicy": "Retain",
              "Properties": {
                "FunctionName": {
                  "Ref": "ApiLambdaFunction"
                },
                "CodeSha256": "ifSgcrHJqeBvm6W1nCyqZV/AD0oGXIVVs5+wXgjRp4w="
              }
            },
            "ApiGatewayRestApi": {
              "Type": "AWS::ApiGateway::RestApi",
              "Properties": {
                "Name": "stg-django-graphQL-api",
                "EndpointConfiguration": {
                  "Types": [
                    "EDGE"
                  ]
                },
                "Policy": ""
              }
            },
            "ApiGatewayResourceProxyVar": {
              "Type": "AWS::ApiGateway::Resource",
              "Properties": {
                "ParentId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "PathPart": "{proxy+}",
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                }
              }
            },
            "ApiGatewayMethodAny": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "ANY",
                "RequestParameters": {},
                "ResourceId": {
                  "Fn::GetAtt": [
                    "ApiGatewayRestApi",
                    "RootResourceId"
                  ]
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ApiLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "ApiLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayMethodProxyVarAny": {
              "Type": "AWS::ApiGateway::Method",
              "Properties": {
                "HttpMethod": "ANY",
                "RequestParameters": {},
                "ResourceId": {
                  "Ref": "ApiGatewayResourceProxyVar"
                },
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "ApiKeyRequired": "<REDACTED>",
                "AuthorizationType": "NONE",
                "Integration": {
                  "IntegrationHttpMethod": "POST",
                  "Type": "AWS_PROXY",
                  "Uri": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:",
                        {
                          "Ref": "AWS::Partition"
                        },
                        ":apigateway:",
                        {
                          "Ref": "AWS::Region"
                        },
                        ":lambda:path/2015-03-31/functions/",
                        {
                          "Fn::GetAtt": [
                            "ApiLambdaFunction",
                            "Arn"
                          ]
                        },
                        "/invocations"
                      ]
                    ]
                  }
                },
                "MethodResponses": []
              },
              "DependsOn": [
                "ApiLambdaPermissionApiGateway"
              ]
            },
            "ApiGatewayDeployment1730760251566": {
              "Type": "AWS::ApiGateway::Deployment",
              "Properties": {
                "RestApiId": {
                  "Ref": "ApiGatewayRestApi"
                },
                "StageName": "stg"
              },
              "DependsOn": [
                "ApiGatewayMethodAny",
                "ApiGatewayMethodProxyVarAny"
              ]
            },
            "ApiLambdaPermissionApiGateway": {
              "Type": "AWS::Lambda::Permission",
              "Properties": {
                "FunctionName": {
                  "Fn::GetAtt": [
                    "ApiLambdaFunction",
                    "Arn"
                  ]
                },
                "Action": "lambda:InvokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":execute-api:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":",
                      {
                        "Ref": "ApiGatewayRestApi"
                      },
                      "/*/*"
                    ]
                  ]
                }
              }
            }
          },
          "Outputs": {
            "ServerlessDeploymentBucketName": {
              "Value": "bravosuperbucket",
              "Export": {
                "Name": "sls-django-graphQL-api-stg-ServerlessDeploymentBucketName"
              }
            },
            "ApiLambdaFunctionQualifiedArn": {
              "Description": "Current Lambda function version",
              "Value": {
                "Ref": "ApiLambdaVersionQKlrF8NWIJuDpYS05be16OrYwBrpMLsqV53BonTFaM"
              },
              "Export": {
                "Name": "sls-django-graphQL-api-stg-ApiLambdaFunctionQualifiedArn"
              }
            },
            "ServiceEndpoint": {
              "Description": "URL of the service endpoint",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    "https://",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    ".execute-api.",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix"
                    },
                    "/stg"
                  ]
                ]
              },
              "Export": {
                "Name": "sls-django-graphQL-api-stg-ServiceEndpoint"
              }
            }
          }
        },
        "vpc": {}
      },
      "plugins": [
        "serverless-wsgi",
        "serverless-python-requirements",
        "serverless-dotenv-plugin"
      ],
      "functions": {
        "api": {
          "handler": "wsgi_handler.handler",
          "events": [
            {
              "http": "ANY /"
            },
            {
              "http": "ANY /{proxy+}"
            }
          ],
          "name": "django-graphQL-api-stg-api",
          "package": {},
          "memory": 2048,
          "timeout": 30,
          "runtime": "python3.9",
          "vpc": {},
          "versionLogicalId": "ApiLambdaVersionQKlrF8NWIJuDpYS05be16OrYwBrpMLsqV53BonTFaM"
        }
      },
      "custom": {
        "wsgi": {
          "app": "myapi.wsgi.application"
        }
      },
      "package": {
        "exclude": [
          "venv/**",
          "__pycache__/*",
          "node_modules/**",
          "README.md",
          "pytest.ini",
          "conftest.py",
          ".venv",
          ".venv.example",
          "package.json",
          "package-lock.json"
        ],
        "artifactsS3KeyDirname": "serverless/django-graphQL-api/stg/code-artifacts",
        "deploymentBucket": "bravosuperbucket",
        "patterns": [
          "wsgi_handler.py",
          "serverless_wsgi.py",
          ".serverless-wsgi"
        ],
        "artifact": "/home/julioaraujo00/projects/power_to_go/power2go/power2go/.serverless/django-graphQL-api.zip",
        "artifactDirectoryName": "serverless/django-graphQL-api/stg/1730760253748-2024-11-04T22:44:13.748Z"
      }
    },
    "serviceRawFile": "org: bravodev\napp: power2go\nservice: django-graphQL-api\nuseDotenv: true\n\nprovider:\n  name: aws\n  region: ${env:AWS_REGION_NAME, 'us-east-1'}\n  runtime: python3.9\n  stage: ${opt:stage, 'stg'}\n  timeout: 30\n  memorySize: 2048\n  deploymentBucket:\n    name: bravosuperbucket \n\nplugins:\n  - serverless-wsgi\n  - serverless-python-requirements\n  - serverless-dotenv-plugin\nfunctions:\n  api:  \n    handler: wsgi_handler.handler\n    events:\n      - http: ANY /\n      - http: ANY /{proxy+}\n\ncustom:\n  wsgi:\n    app: myapi.wsgi.application\n\npackage:\n  exclude:\n    - venv/**\n    - __pycache__/*\n    - node_modules/**\n    - README.md\n    - pytest.ini\n    - conftest.py\n    - .venv\n    - .venv.example\n    - package.json\n    - package-lock.json",
    "command": [
      "deploy"
    ],
    "options": {},
    "error": {
      "message": "Stack:arn:aws:cloudformation:us-east-1:941377151341:stack/django-graphQL-api-stg/91ed5bf0-9afd-11ef-a380-0affd22bd183 is in DELETE_FAILED state and can not be updated.",
      "stack": "ServerlessError2: Stack:arn:aws:cloudformation:us-east-1:941377151341:stack/django-graphQL-api-stg/91ed5bf0-9afd-11ef-a380-0affd22bd183 is in DELETE_FAILED state and can not be updated.\n    at file:///home/julioaraujo00/.serverless/releases/4.4.7/package/dist/sf-core.js:725:36\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\n    at async persistentRequest (file:///home/julioaraujo00/.serverless/releases/4.4.7/package/dist/sf-core.js:724:1963)",
      "code": "AWS_CLOUD_FORMATION_UPDATE_STACK_VALIDATION_ERROR"
    },
    "params": {},
    "machineId": "654f788b17e9f5e4a2be460a7200015e",
    "stage": "stg",
    "accessKeyV2": "<REDACTED>",
    "accessKeyV1": "<REDACTED>",
    "orgId": "8da61942-a9ed-4445-abb0-d532ae6fc864",
    "orgName": "bravodev",
    "userId": "H3fFyLvPj5T3kPyxQv",
    "dashboard": {
      "isEnabledForService": true,
      "requiredAuthentication": false,
      "orgFeaturesInUse": {
        "providers": false,
        "monitoring": false
      },
      "orgObservabilityIntegrations": null,
      "serviceAppId": "jmRf2TpKX8n98B5XPs",
      "serviceProvider": null,
      "instanceParameters": null
    },
    "userName": "bravodev",
    "subscription": null,
    "userEmail": "julio.rios.araujo@gmail.com",
    "serviceProviderAwsRegion": "us-east-1",
    "serviceProviderAwsCredentials": "<REDACTED>",
    "serviceProviderAwsAccountId": "941377151341",
    "projectType": "traditional",
    "versionSf": "4.4.7",
    "serviceProviderAwsCfStackName": "django-graphQL-api-stg",
    "serviceUniqueId": "arn:aws:cloudformation:us-east-1:941377151341:stack/django-graphQL-api-stg/91ed5bf0-9afd-11ef-a380-0affd22bd183",
    "serviceProviderAwsCfStackId": "arn:aws:cloudformation:us-east-1:941377151341:stack/django-graphQL-api-stg/91ed5bf0-9afd-11ef-a380-0affd22bd183",
    "serviceProviderAwsCfStackCreated": "2024-11-04T22:38:53.861Z",
    "serviceProviderAwsCfStackUpdated": null,
    "serviceProviderAwsCfStackStatus": "DELETE_FAILED",
    "serviceProviderAwsCfStackOutputs": null
  }
}